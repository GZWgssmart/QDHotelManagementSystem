<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="top.zywork.dao.HouseRentPayDAO">
    <resultMap id="houseRentPayMap" type="top.zywork.vo.HouseRentPayVo">
        <id column="id" property="id"></id>
        <result column="master_id" property="masterId"></result>
        <result column="hotel_id" property="hotelId"></result>
        <result column="company_id" property="companyId"></result>
        <result column="total_pay" property="totalPay"></result>
        <result column="pay_time" property="payTime"></result>
        <result column="pay_type" property="payType"></result>
        <result column="pay_period_start" property="payPeriodStart"></result>
        <result column="pay_period_end" property="payPeriodEnd"></result>
        <result column="is_cash" property="isCash"></result>
        <result column="description" property="description"></result>
        <result column="create_time" property="createTime"></result>
        <result column="is_active" property="isActive"></result>
        <result column="house_name" property="houseName"></result>
        <result column="first_pay" property="firstPay"></result>
        <association property="contractMasterVo" javaType="top.zywork.vo.ContractMasterVo">
            <id column="cid" property="id"></id>
            <result column="bank_name" property="bankName"></result>
            <result column="phone" property="phone"></result>
        </association>
        <association property="hotelVo" javaType="top.zywork.vo.HotelVo">
            <id column="hid" property="id"></id>
            <result column="title" property="title"></result>
        </association>
    </resultMap>
    <resultMap id="selet2VoMap" type="top.zywork.vo.Select2Vo"></resultMap>
    <resultMap id="houseRentMap" type="top.zywork.vo.HouseRentVo"></resultMap>
    <sql id="search">
        <if test="#{searchVal!=null} and #{searchVal!=''}">
            and (t.total_pay like concat('%${searchVal}%')
            or t.pay_time like concat ('%${searchVal}%')
            or t.pay_type like concat ('%${searchVal}%')
            or t.description like concat ('%${searchVal}%')
            or t.is_cash like concat ('%${searchVal}%')
            or t.house_name like concat ('%${searchVal}%')
            or t.first_pay like concat ('%${searchVal}%')
            )
        </if>
    </sql>
    <select id="getContractMaster" resultMap="selet2VoMap" parameterType="long">
          select id,bank_name as text from t_contract_master where company_id=#{companyId}
    </select>
    <select id="getHotel" resultMap="selet2VoMap" parameterType="long">
        select id,title as text from t_hotel where company_id=#{companyId}
    </select>
    <select id="getById" resultMap="houseRentPayMap" parameterType="long">
        select t.*,c.id as cid,c.bank_name,c.phone,h.id as hid,h.title from t_rent_pay t,t_contract_master c,t_hotel h where t.master_id=c.id and t.hotel_id=h.id and t.id = #{id}
    </select>
    <delete id="removeById" parameterType="long">
        delete from t_rent_pay where id = #{id}
    </delete>
    <select id="listPage" resultMap="houseRentPayMap">
        select t.*,c.id as cid,c.bank_name,c.phone,h.id as hid,h.title from t_rent_pay t,t_contract_master c,t_hotel h where t.master_id=c.id and t.hotel_id=h.id and t.company_id=#{companyId} <include refid="search"/> order by t.create_time desc limit #{pageNo},#{pageSize}
    </select>
    <select id="listAll" resultMap="houseRentPayMap">
        select * from t_rent_pay where company_id=#{companyId}
    </select>
    <select id="count" resultType="java.lang.Long">
        select count(*) from t_rent_pay t,t_contract_master c,t_hotel h where t.master_id=c.id and t.hotel_id=h.id and t.company_id=#{companyId} <include refid="search"/>
    </select>
    <insert id="save" parameterType="houseRentPayVo">
        insert into t_rent_pay ( master_id, hotel_id, company_id, total_pay, pay_time, pay_type, pay_period_start, pay_period_end, is_cash, description, is_active,house_name,first_pay) values ( #{masterId}, #{hotelId}, #{companyId}, #{totalPay}, #{payTime}, #{payType}, #{payPeriodStart}, #{payPeriodEnd}, #{isCash}, #{description}, #{isActive},#{houseName},#{firstPay})
    </insert>
    <update id="updateStatus">
        update t_rent_pay set is_active=#{status} where id=#{id}
    </update>
    <update id="update">
        update t_rent_pay set master_id=#{masterId},hotel_id=#{hotelId},total_pay=#{totalPay},pay_type=#{payType},house_name=#{houseName},first_pay=#{firstPay},pay_period_start=#{payPeriodStart},pay_period_end=#{payPeriodEnd},is_cash=#{isCash},description=#{description} where id = #{id}
    </update>
    <select id="notHotelId" resultMap="houseRentMap">
        select
          (select count(house_name) from t_rent_pay ) as 'houseTotal',
          (select sum(sum_pay) from t_rent_pay where  is_cash=0) as 'dfPayMoney',
          (select sum(sum_pay) from t_rent_pay where  is_cash=0 and now()>first_pay_time) as 'chaoqiPayMoney',
          (select IfNULL(sum(sum_pay),0.0) from t_rent_pay where  is_cash=0 and first_pay_time BETWEEN NOW() and date_add(now(), interval 5 day)) as 'fiveDayPayMoney',
          (select sum(sum_pay) from t_rent_pay where  is_cash=0 and month(now())=month(first_pay_time)) as 'thisMonthPayMoney',
          (select IfNULL(sum(sum_pay),0.0) from t_rent_pay where  is_cash=1 and month(now())=month(first_pay_time)) as 'thisMonthPayAll',
          (select sum(sum_pay) from t_rent_pay where  is_cash=0 and month(now())=month(first_pay_time)) as 'thisMonthNotPay',
          (select IfNULL(sum(sum_pay),0.0) from t_rent_pay where  is_cash=0 and (month(now())+1)=month(first_pay_time)) as 'nextMonthPay'       
        from t_rent_pay limit 0,1
    </select>
    <select id="haveHotelId" resultMap="houseRentMap" parameterType="long">
        select
          (select count(house_name) from t_rent_pay where hotel_id=#{hotelId}) as 'houseTotal',
          (select sum(sum_pay) from t_rent_pay where hotel_id=#{hotelId} and is_cash=0) as 'dfPayMoney',
          (select sum(sum_pay) from t_rent_pay where hotel_id=#{hotelId} and is_cash=0 and now()>first_pay_time) as 'chaoqiPayMoney',
          (select IfNULL(sum(sum_pay),0.0) from t_rent_pay where hotel_id=#{hotelId} and is_cash=0 and first_pay_time BETWEEN NOW() and date_add(now(), interval 5 day)) as 'fiveDayPayMoney',
          (select sum(sum_pay) from t_rent_pay where hotel_id=#{hotelId} and is_cash=0 and month(now())=month(first_pay_time)) as 'thisMonthPayMoney',
          (select IfNULL(sum(sum_pay),0.0) from t_rent_pay where hotel_id=#{hotelId} and is_cash=1 and month(now())=month(first_pay_time)) as 'thisMonthPayAll',
          (select sum(sum_pay) from t_rent_pay where hotel_id=#{hotelId} and is_cash=0 and month(now())=month(first_pay_time)) as 'thisMonthNotPay',
          (select IfNULL(sum(sum_pay),0.0) from t_rent_pay where hotel_id=#{hotelId} and is_cash=0 and (month(now())+1)=month(first_pay_time)) as 'nextMonthPay'
        
        from t_rent_pay where hotel_id=#{hotelId} GROUP BY  hotel_id;
    </select>
</mapper>